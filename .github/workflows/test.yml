name: test-CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:

  build:

    runs-on: ubuntu-latest

    strategy:

      fail-fast: true

      matrix:

        python-version: ["3.9", "3.10", "3.12"]
        tensorflow-version: ["2.15.0", "2.16.1", "2.17.0", "2.18.0"]
        tfp-version: ["0.23.0", "0.24.0"]

        exclude:
          - python-version: "3.12"
            tensorflow-version: "2.15.0"
          - tensorflow-version: "2.15.0"
            tfp-version: "0.24.0"
          - tensorflow-version: "2.16.1"
            tfp-version: "0.23.0"
          - tensorflow-version: "2.17.0"
            tfp-version: "0.23.0"
          - tensorflow-version: "2.18.0"
            tfp-version: "0.23.0"

    steps:

      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tensorflow==${{ matrix.tensorflow-version }}
          pip install tensorflow-probability==${{ matrix.tfp-version }}

          # Install tf-keras for tensorflow 2.16.1
          if [ "${{ matrix.tensorflow-version }}" == "2.16.1" ]; then
            pip install tf-keras
          fi
          # Install tf-keras for tensorflow 2.17.0
          if [ "${{ matrix.tensorflow-version }}" == "2.17.0" ]; then
            pip install tf-keras
          fi
          # Install tf-keras for tensorflow 2.18.0
          if [ "${{ matrix.tensorflow-version }}" == "2.17.0" ]; then
            pip install tf-keras
          fi

          pip install coveralls
          pip install -r requirements.txt

      - name: Software versions
        run: |
          python -c "import sys; \
                     print('Python version: ', sys.version); \
                     import tensorflow as tf; \
                     import tensorflow_probability as tfp; \
                     print('Tensorflow version             =', tf.__version__); \
                     print('Tensorflow Probability version =', tfp.__version__); \
                     "

      - name: Run unit tests
        run: |
          if [ "${{ matrix.tensorflow-version }}" == "2.16.1" ]; then
            export TF_USE_LEGACY_KERAS=1
          fi
          if [ "${{ matrix.tensorflow-version }}" == "2.17.0" ]; then
            export TF_USE_LEGACY_KERAS=1
          fi
          if [ "${{ matrix.tensorflow-version }}" == "2.18.0" ]; then
            export TF_USE_LEGACY_KERAS=1
          fi
          make test_with_coverage

      - name: Upload coverage to coveralls
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build documentation
        run: |
          make documentation
      
      - name: Test installation
        run: |
          make install